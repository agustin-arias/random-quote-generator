{"version":3,"sources":["components/QuoteText.jsx","components/QuoteAuthor.jsx","components/Buttons.jsx","components/QuoteBox.jsx","logic/randomNumber.js","logic/changeBodyColor.js","logic/fetchRandomQuote.js","components/App.js","reportWebVitals.js","index.js"],"names":["QuoteText","this","props","color","quote","className","style","Component","QuoteAuthor","author","height","Buttons","onNewQuote","type","backgroundColor","onClick","QuoteBox","randomQuoteData","width","randomNumber","max","Math","floor","random","colors","changeBodyColor","document","getElementsByTagName","cssText","fetchRandomQuote","a","fetch","response","json","data","App","state","setState","handleNewQuote","Fragment","React","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4da07378.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass QuoteText extends Component {\n  render() {\n    const { color, quote } = this.props;\n    return (\n      <div className=\"container\">\n        <h4 style={{ color }}>\n          <i className=\"fa fa-quote-left mr-2\"></i>\n          {quote}\n        </h4>\n      </div>\n    );\n  }\n}\n\nexport default QuoteText;\n","import React, { Component } from \"react\";\n\nclass QuoteAuthor extends Component {\n  render() {\n    const { color, author } = this.props;\n    return (\n      <div className=\"container mt-3\" style={{ height: \"50px\" }}>\n        <span className=\"float-right\" style={{ color }}>\n          - {author}\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default QuoteAuthor;\n","import React, { Component } from \"react\";\n\nclass Buttons extends Component {\n  render() {\n    const { color, onNewQuote } = this.props;\n    return (\n      <div className=\"d-flex justify-content-between\">\n        <div>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary mr-2\"\n            style={{ backgroundColor: color }}\n          >\n            <i className=\"fa fa-twitter\"></i>\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            style={{ backgroundColor: color }}\n          >\n            <i className=\"fa fa-tumblr\"></i>\n          </button>\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"btn btn-primary\"\n          style={{ backgroundColor: color }}\n          onClick={onNewQuote}\n        >\n          New Quote\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Buttons;\n","import React, { Component } from \"react\";\nimport QuoteText from \"./QuoteText\";\nimport QuoteAuthor from \"./QuoteAuthor\";\nimport Buttons from \"./Buttons\";\n\nclass QuoteBox extends Component {\n  render() {\n    const {\n      color,\n      onNewQuote,\n      randomQuoteData: { author, quote },\n    } = this.props;\n    return (\n      <div\n        className=\"vertical-center jumbotron text-center py-5 px-6 bg-white\"\n        style={{\n          backgroundColor: color,\n          color: color,\n          width: \"550px\",\n        }}\n      >\n        <QuoteText color={color} quote={quote} />\n        <QuoteAuthor color={color} author={author} />\n        <Buttons color={color} onNewQuote={onNewQuote} />\n      </div>\n    );\n  }\n}\n\nexport default QuoteBox;\n","export default function randomNumber(max) {\n  return Math.floor(Math.random() * max);\n}\n","import randomNumber from \"./randomNumber\";\n\nconst colors = [\"blue\", \"orange\", \"yellow\", \"green\"];\n\n// change the body's background color\nexport default function changeBodyColor() {\n  const color = colors[randomNumber(4)];\n  let body = document.getElementsByTagName(\"body\")[0];\n  body.style.cssText = `\n  background-color: ${color};\n  `;\n  return color;\n}\n","import randomNumber from \"./randomNumber\";\n\nexport default async function fetchRandomQuote() {\n  const url = \"http://quotes.stormconsultancy.co.uk/quotes.json\";\n  const response = await fetch(url);\n  const data = await response.json();\n  const { author, quote } = data[randomNumber(44)];\n  return { author, quote };\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport QuoteBox from \"./QuoteBox\";\nimport changeBodyColor from \"../logic/changeBodyColor\";\nimport fetchRandomQuote from \"../logic/fetchRandomQuote\";\n\nexport default class App extends React.Component {\n  state = {\n    color: \"\",\n    randomQuoteData: {\n      author: \"\",\n      quote: \"\",\n    },\n  };\n\n  async handleNewQuote() {\n    const { author, quote } = await fetchRandomQuote();\n    const color = changeBodyColor();\n    this.setState({ color, randomQuoteData: { author, quote } });\n  }\n\n  async componentDidMount() {\n    await this.handleNewQuote();\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <QuoteBox\n          color={this.state.color}\n          onNewQuote={() => {\n            this.handleNewQuote();\n          }}\n          randomQuoteData={this.state.randomQuoteData}\n        />\n      </React.Fragment>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n// render the App component\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}